#include <iostream>
#include <vector>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>

using namespace std;

int lev(string f, string s, int repl = 1, int del = 1, int add = 1)
{
	vector <vector <int>> fun(f.size() + 1, vector <int>(s.size() + 1));

	fun[0][0] = 0;

	for (int i = 1; i <= f.size(); i++)
	{
		fun[i][0] = fun[i- 1][0] + del;
	}

	for (int i = 1; i <= s.size(); i++)
	{
		fun[0][i] = fun[0][i - 1] + add;
	}

	for (int i = 1; i <= f.size(); i++)
	{
		for (int j = 1; j <= s.size(); j++)
		{
			fun[i][j] = min(fun[i - 1][j - 1] + int(f[i - 1] != s[j - 1]) * repl, min(fun[i - 1][j] + del, fun[i][j - 1] + add));
		}
	}
	return fun[f.size()][s.size()];
}

signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);



	//int replace, del;
	//cin >> replace >> del;

	string f, s;
	cin >> f >> s;

	cout << lev(f, s,12 ,20,15);
}
